/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

$Id$

= Rationale =

 This short guide is for volunteers that intend to cover the role of Release Manager

== Prerequisites ==

 * Install/Configure GPG - The artifacts that are deployed to the ASF central repository need to be signed.
 To do this you will need to have a public and private keypair.
 There is a very good [[http://www.sonatype.com/people/2010/01/how-to-generate-pgp-signatures-with-maven/|guide]] that
 will walk you though this.

 * Install Apache Maven 2.2.1 or higher. 2.2.0 has a bug that will produce invalid checksums;
 * We strongly encourage our developers to install Apache Maven 3.0.4.

== Configuration ==

=== Apache Maven ===

 As of Maven 2.1.0 you can now encrypt your servers passwords.  We highly recommend that you follow this
 [[http://maven.apache.org/guides/mini/guide-encryption.html|guide]] to set your master password and use it to encrypt
 your ASF password in the next section.

=== ASF settings ===
 Using the instructions from the previous step encrypt your Sonatype password and add the following servers to your
 {{{~/.m2/settings.xml}}} file.  You may already have other servers in this file.  If not just create the file.

 {{{
<?xml version="1.0" encoding="UTF-8"?>
<settings>
  ...
  <servers>
    <server>
      <id>apache.snapshots.https</id>
      <username>simonetripodi</username>
      <password>{put your encrypted password here}</password>
    </server>
    <server>
      <id>apache.releases.https</id>
      <username>simonetripodi</username>
      <password>{put your encrypted password here}</password>
    </server>
  </servers>
  ...
  <profiles>
    <profile>
      <id>apache</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <mavenExecutorId>forked-path</mavenExecutorId>
        <gpg.keyname>19FEA27D</gpg.keyname>\
        <!-- optional -->
        <gpg.passphrase>your-gpg-passphrase</gpg.passphrase>
      </properties>
    </profile>
  </profiles>
  ...
</settings>
}}}

== Release ==

=== Release notes ===

 Go to Any23 [[https://issues.apache.org/jira/browse/ANY23|JIRA]] instance and close all the issues related to current
 release, then click on the JIRA release notes link, browse to the plugin's JIRA page, select the Road Map link, and use
 the link to Release Notes that is next to the version being released.

 Copy the text and copy it the RELEASE-NOTES.txt file on svn, and commit it.

=== Tag the code and upload artifacts ===

 The release plugin for Maven is already configured in the parent pom file so all you need to do is execute the following
 two steps to complete the release. The first step will create the release tag and update the pom with the correct
 release and snapshot versions. The second step will sign and deploy the artifacts to the ASF repository.
 This repository is synced every hour to the central Maven repositories.
 If you don't supply the optional {{{gpg.passphrase}}} then you will be prompted for it.

 * Prepare the release

   {{{ mvn release:prepare -P apache}}}

 * Perform

   {{{ mvn release:perform -P apache -Dgpg.passphrase=thephrase}}}

 or just

    {{{ mvn release:perform -P apache }}}

 and type the gpg passphrase when prompted

=== Submit the vote to the MailingList ===

 Propose a vote on the dev list with the closed issues, the issues left, the staging repository and the staging site. For instance:

{{{
To: "Apache Any23 Developers List" <any23-dev@incubator.apache.org>
Subject: [VOTE] Release Apache Any23 version Y.Z

Hi,

We solved N issues:
http://issues.apache.org/secure/ReleaseNote.jspa?projectId=XXX&styleName=Html&version=XXX

There are still M issues left in JIRA:
http://issues.apache.org/secure/IssueNavigator.jspa?reset=true&pid=XXX&status=1

Staging repo:
https://repository.apache.org/content/repositories/any23-[YOUR REPOSITORY ID]/

Staging site:
http://incubator.apache.org/any23/Y.Z-RCX/

Vote open for 72 hours.

[ ] +1, let's get it ruuuumbleeeeee!!!
[ ] +/-0, fine, but consider to fix few issues before...
[ ] -1, nope, because... (and explain why)
}}}

 To get the JIRA release notes link, browse to the plugin's JIRA page, select the Road Map link, and use the link to
 Release Notes that is next to the version being released.

 To get the list of issues left in JIRA, browse to the plugin's JIRA page, and from the Preset Filters on the right,
 use the link for Outstanding issues.